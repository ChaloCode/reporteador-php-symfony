
{% block stylesheetsGrafica %}    
{% endblock %}
{% block bodyGrafica %} 
     {% embed "generico/ventana.html.twig" %}                
                {% block tituloVentana %}{{info['grafica'].titulo}}{% endblock %} 
                {% block subTituloVentana %}{{info['grafica'].subtitulo}}{% endblock %}
                 {% block bodyLink %}
                    <li><a  class="fa fa-bar-chart" id="BarraLink" onclick="Barra()"> Grafica, Barra</a></li>  
                    <li><a  class="fa fa-line-chart" id="LineaLink" onclick="Linea()"> Grafica, Linea</a></li>                    
                    <li><a  class="fa fa-area-chart" id="AreaLink" onclick="Area()"> Grafica, Area</a></li>                    
                    <li><a  class="fa fa-pie-chart" id="DonutLink" onclick="Donut()"> Grafica, Donut</a></li>
                 {% endblock %}                           
                {% block bodyVentana %}                  
                  <div id="tap-grafica" >                              
                    <div id="Graficar" ></div>
                  </div>
               {% endblock %}
        {% endembed %}          
{% endblock %}
{% block javascriptsGrafica %}  
   <!-- moris js -->  
  <script src='{{ asset("js/moris/raphael-min.js")}}'></script>
  <script src='{{ asset("js/moris/morris.min.js")}}'></script>
  
  <script type="text/javascript">
  var datax=[
       {% for i in 0..20 %}
            { 
                label: '{{grafica['x'][i]}}'
                ,valor: {{grafica['y'][i]}} 
                ,value: {{grafica['y'][i]}} 
                
            },
        {% endfor %} 
  ];

  function ResetTapGrafica()
  {
      $('#Graficar').remove();
      $('#tap-grafica').append( '<div id="Graficar" ></div>' );
  }
  function Linea()
  {     
       ResetTapGrafica()
       Morris.Line({
            // ID of the element in which to draw the chart.
            element: 'Graficar',
            // Chart data records -- each entry in this array corresponds to a point on
            // the chart.
            data: datax,
            // The name of the data record attribute that contains x-values.
            xkey: 'label',
            // A list of names of data record attributes that contain y-values.
            ykeys: ['valor'],
            // Labels for the ykeys -- will be displayed when you hover over the
            // chart.
            labels: ['valor']
            
            
            });
  }
  
  function Area()
  {
      ResetTapGrafica()
     //$('#AreaLink').removeAttr('onclick');
      Morris.Area({
            // ID of the element in which to draw the chart.
            element: 'Graficar',
            // Chart data records -- each entry in this array corresponds to a point on
            // the chart.
            data: datax,
            // The name of the data record attribute that contains x-values.
            xkey: 'label',
            // A list of names of data record attributes that contain y-values.
            ykeys: ['valor'],
            // Labels for the ykeys -- will be displayed when you hover over the
            // chart.
            labels: ['valor']
            });
  }
  
  function Barra()
  {
       ResetTapGrafica()
       Morris.Bar({
            // ID of the element in which to draw the chart.
            element: 'Graficar',
            // Chart data records -- each entry in this array corresponds to a point on
            // the chart.
            data: datax,
            // The name of the data record attribute that contains x-values.
            xkey: 'label',
            // A list of names of data record attributes that contain y-values.
            ykeys: ['valor'],
            // Labels for the ykeys -- will be displayed when you hover over the
            // chart.
            labels: ['valor']
            });
  }
  
  function Donut()
  {
         ResetTapGrafica()
         Morris.Donut({
            // ID of the element in which to draw the chart.
            element: 'Graficar',
            data: datax,                    
            formatter: function (y) {
                return y + "%"
            }
      });
  }
      //Linea();
        //Area();
        Barra();
       // Donut();
  </script>
{% endblock %}
