
{% block stylesheetsGrafica %}    
<style>
.margen{
    margin-top: 2px;
    margin-bottom: 8px;
}
</style>
{% endblock %}
{% block bodyGrafica %} 
     {% embed "generico/ventana.html.twig" %}                
                {% block tituloVentana %}{{info['grafica'].titulo}}{% endblock %} 
                {% block subTituloVentana %}{{info['grafica'].subtitulo}}{% endblock %}
                 {% block bodyLink %}                  
                 {% endblock %}                           
                {% block bodyVentana %}  
					<div class="row">
                        <div class="col-md-6">
                            <p>Seleccione valores para el <strong>eje horizontal</strong></p>
                                <select id='grafica-x' class="margen">
                                    {% for i in infoTabla['columnas'] %}
                                        <option value="{{ loop.index0 }}">{{i}}</option>               
                                    {% endfor %}
                                </select> 
                            <p>Seleccione valores para el <strong>eje vertical</strong></p>
                            <select id='grafica-y' class="margen">
                                {% for i in infoTabla['columnas'] %}
                                    <option value="{{ loop.index0 }}">{{i}}</option>               
                                {% endfor %}
                            </select>
                        </div>
                        <div class="col-md-6">
                            <p>Seleccione tipo de regresión <strong>a calcular</strong></p>
                            <select id='tipo-regresion' class="margen">
                                    <option value='lineal'>Regresión Lineal</option> 
                                    <option value='cuadrada'>Regresión Cuadratica</option> 
                            </select> 
                            <p>Digite valor <strong>a predecir</strong></p>
                            <input id="valorFuturo" placeholder="1,5">
                            <button  id="calRegresion" class="btn btn-success">Calcular</button>
                        </div>
                     </div>   
                     
                        <div id='resultado'></div>
                        <div class="ln_solid"></div>                
                        <div id="tap-grafica" >                              
                            <div id="graficar" style="height:350px; width:98%;"></div>
                        </div>
                   
               {% endblock %}
        {% endembed %}          
{% endblock %}
{% block javascriptsGrafica %}  
<!-- echart -->
<script src='{{asset("js/echart/echarts-all.js")}}'></script>
<script src='{{asset("js/echart/green.js")}}'></script>
  
<script type="text/javascript">

var dataAll = {        
{% for i in 0..infoTabla['lengthFilas']   %}   
"{{i}}" :{        
            {% for j in 0..infoTabla['lengthColumnas']  %}   
                "{{j}}": "{{infoTabla['filas'][i][j]}}",
            {% endfor %}      
        },    
{% endfor %}     
};

$("#grafica-y").change(function() {
        $('#resultado').html('');
        $("#valorFuturo").removeAttr("style");
}); 

$("#grafica-x").change(function() {
        $('#resultado').html('');
        $("#valorFuturo").removeAttr("style");
}); 


$("#calRegresion").click(function() {    
        var pm=$('#valorFuturo').val();        
        if($.isNumeric(pm)){ 
              var x=cargarGrafica(pm);
              if(x!='false')
              {
                   $("#valorFuturo").removeAttr("style");
                   $('#resultado').append('<p><font color="blue"><strong>Predición:</strong> '+x+'</font></p>');
                   Alerta('Resultado:','Predición: '+x,'info') 
              }
        }
        else{
              $('#valorFuturo').css("border", "1px solid red");
              Alerta('Error: Valor a predecir','Digite solo valores numéricos.\nSeleccione otro valor para continuar.','error');
        }
        
}); 
  
function cargarGrafica(pm)
{   
    var xx=$("#grafica-x").val();
    var yy=$("#grafica-y").val();
    var control2=true;
    var xarray=[];
    var yarray=[];
    var xy=[];
    
    for (i=0;i<{{infoTabla['lengthFilas']+1}};i++)
    {
        var n=dataAll[i][xx];
        xarray.push(n);
        
        var n2=dataAll[i][yy]; 
        yarray.push(n2); 
        
        xy.push([n,n2]);  
        if(n==0){
            n++;
        }
        n=n/n;               
        if(n2==0){
            n2++;
        }
        n2=n2/n2;
       
        if(!Number.isInteger(n)){    
            control2=false;
            Alerta('Error','En el eje horizontal, solo puede contener valores numéricos.\nSeleccione otro valor para continuar.','error');
            break;
        }
        if( !Number.isInteger(n2) ){
                control2=false;
                Alerta('Error','En el eje vertical, solo puede contener valores numéricos.\nSeleccione otro valor para continuar.','error');
                break;
        }
    }   
    if(control2)
    {     
        if($('#tipo-regresion').val()=='lineal')
        {
            return regresionLineal(xarray,yarray,pm,xy);
        }             
        
    }
    else {
        return 'false';
    }
}
    

function regresionLineal(xarray,yarray,pm,grafica_xy)
{   
    var x2=0;
    var y=0;
    var x=0;
    var xy=0;
    var cantidad=xarray.length;   
    for(var i=0;i<cantidad;i++){
        //Tabla de datos
        //console.log(xarray[i]+' '+yarray[i]);
        //Calculo de terminos
        x2 += parseFloat(xarray[i])*parseFloat(xarray[i]);
        y  += parseFloat(yarray[i]);      
        x  += parseFloat(xarray[i]);
        xy += parseFloat(xarray[i])*parseFloat(yarray[i]);
    }     
    //Coeficiente parcial de regresion
    var b=(cantidad*xy-x*y)/(cantidad*x2-x*x);
    //Calculo del intercepto
    var a=(y-b*x)/cantidad;
    //Recta tendencial
    //y=a+bx
    var title_grafica='y='+a.toFixed(2)+'+'+b.toFixed(2)+'x';
    //Proyeccion en dias para un 100% de la ejecucion:
    if (b!=0){
            valor_proyectado=(pm-a)/b;
    }
    else{
        valor_proyectado=999999999; //Infinitos
    }
    dp=valor_proyectado.toFixed(2);    
    if(dp>=999999999){
         Alerta('Error','Lo sentimos no es posible usar Regresión Lineal.\nEl valor de la predicción es un número gigante.\nRecomendaciones:\n* Cambie el valor a predecir.\n* Seleccione otro tipo de regresión.\n* Asegure que la información de los ejes sea coherente.','error');
    }
    else{
        var y_grafica=[];
        var x_min=Number(xarray[0]);
        var x_max=Number(xarray[0]);
      
        for(var i=0;i<cantidad;i++){  
            //y=a+bx
            y=a+b*Number(xarray[i]);
            y_grafica.push(y.toFixed(2));            
            if(parseFloat(x_min)>parseFloat(xarray[i]))
            {
                x_min=Number(xarray[i]);
            }
            else{
                x_max=Number(xarray[i]);
            }    
        }        
        
        lineal(x_min,x_max,title_grafica,y_grafica,grafica_xy);
        return dp;
    }
   
  
    
}

    
function lineal(x_min,x_max,title_grafica,y_grafica,xy)
{
    var myChart = echarts.init(document.getElementById('graficar'));
    var option = {
            title : {
                    text: 'Regresión Lineal',
                    subtext: title_grafica
                },
                tooltip : {
                    trigger: 'axis'
                },
            
                toolbox: {
                    show : true,
                    feature : {
                        mark : {show: false},
                        dataView : {show: false, readOnly: false},
                        restore : {
                            show : true,
                            title : 'Refrescar'
                        },
                        saveAsImage : {
                            show : true,
                            title : 'Descargar',
                            type : 'png',
                            lang : ['Click para empezar la descarga.']
                        
                        }
                    }
                
                },
            
                xAxis : [
                    {
                        type : 'category',
                        boundaryGap : true,
                        data : function (){
                            var list = [];
                            var i = Number(x_min);
                            for (;i<=x_max;) {
                                list.push(i);
                                i++;
                            }                            
                            return list;
                        }()
                    },
                    {
                        type : 'value',
                        scale : true,
                        splitNumber: 29,
                        axisLabel: {show:false},
                        splitLine: {show:false}
                    }
                ],
                yAxis : [
                    {
                        type : 'value'
                    },
                    {
                        type : 'value'
                    }
                ],
                animation: true,
                series : [
                    {
                        name:'punto',
                        type:'scatter',
                        tooltip : {
                            trigger: 'item',
                            formatter : function (params) {
                                return  params.seriesName + ' : ' 
                                    + params.value[0] + ', ' 
                                    + params.value[1]; 
                            }
                        },
                    
                        symbol: 'circle',
                    
                        data: (function () {                                                                       
                            return xy;
                        })()
                    },
                    {
                        name:title_grafica,
                        type:'line',                     
                        data:function (){                         
                            return y_grafica;
                        }()
                    }
                ]
            };
    myChart.setOption(option);
}
            
 //lineal();       

</script>
{% endblock %}
